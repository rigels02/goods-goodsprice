
package goodsprice.ui;

import goodsprice.model.Good;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.InputVerifier;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JFormattedTextField.AbstractFormatter;
import javax.swing.JTextField;

/**
 *
 * @author Raitis
 */
public class AddEditDlg extends javax.swing.JDialog  {

    javax.swing.JFrame parent;
    private int x;
    private int y;
    private ISaveActionCallBack scallBack;
    /**
     * Creates new form AddEditDlg
     */
    public AddEditDlg(/*java.awt.Frame parent*/ javax.swing.JFrame parent, boolean modal) {
        super(parent, modal);
       
        initComponents();
         this.parent= parent;
        jLblValidation.setText("");
        
        this.addComponentListener(new ComponentAdapter() {
            @Override
            public void componentMoved(ComponentEvent e) {
                super.componentMoved(e); 
                /*
                System.out.println(".componentMoved():"+AddEditDlg.this.getLocation().x+ " : "+
                AddEditDlg.this.getLocation().y);
                */
                x= AddEditDlg.this.getLocation().x;
                y= AddEditDlg.this.getLocation().y;
            }

        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtxtDate = new javax.swing.JTextField();
        jBtnPickDate = new javax.swing.JButton();
        jTxtPrice = new javax.swing.JTextField();
        jTxtDiscount = new javax.swing.JTextField();
        jBtnSave = new javax.swing.JButton();
        jBtnCancel = new javax.swing.JButton();
        jLblValidation = new javax.swing.JLabel();
        jCBName = new javax.swing.JComboBox<>();
        jCBShop = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Title Text");

        jtxtDate.setEditable(false);
        jtxtDate.setText("Date Here");
        jtxtDate.setInputVerifier(new IsEmptyDateFieldVerifier());

        jBtnPickDate.setText("Pick Date");
        jBtnPickDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnPickDateActionPerformed(evt);
            }
        });

        jTxtPrice.setToolTipText("price");
        jTxtPrice.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTxtPrice.setInputVerifier( new DoubleVerifierNotZero());

        jTxtDiscount.setToolTipText("discount");
        jTxtDiscount.setInputVerifier(new DoubleVerifier());

        jBtnSave.setText("Save");
        jBtnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSaveActionPerformed(evt);
            }
        });

        jBtnCancel.setText("Cancel");
        jBtnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCancelActionPerformed(evt);
            }
        });

        jLblValidation.setForeground(new java.awt.Color(255, 0, 51));
        jLblValidation.setText("validation text");

        jCBName.setEditable(true);
        jCBName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jCBName.setToolTipText("good name");
        JTextField tf1=(JTextField)(jCBName.getEditor().getEditorComponent());
        tf1.setInputVerifier(new IsEmptyVerifier());

        jCBShop.setEditable(true);
        jCBShop.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jCBShop.setToolTipText("shop");
        JTextField tf2=(JTextField)(jCBShop.getEditor().getEditorComponent());
        tf2.setInputVerifier(new IsEmptyVerifier());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLblValidation, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addComponent(jBtnSave)
                                .addGap(18, 18, 18)
                                .addComponent(jBtnCancel))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jTxtDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jCBName, javax.swing.GroupLayout.Alignment.LEADING, 0, 192, Short.MAX_VALUE)
                                        .addComponent(jTxtPrice, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jCBShop, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jtxtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jBtnPickDate)))))
                        .addGap(0, 56, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnPickDate))
                .addGap(18, 18, 18)
                .addComponent(jCBName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCBShop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTxtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTxtDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnSave)
                    .addComponent(jBtnCancel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jLblValidation)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnPickDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnPickDateActionPerformed
        jtxtDate.setText(new DatePicker(this.parent,x,y).setPickedDate());
    }//GEN-LAST:event_jBtnPickDateActionPerformed

    private void jBtnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_jBtnCancelActionPerformed

    private void jBtnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSaveActionPerformed
        if(scallBack != null){
            if( !isValidForm()) return;
                
            try {
                Good good = new Good();
                String dstr = jtxtDate.getText();
                DateLabelFormatter formater = new DateLabelFormatter();
                Date dd = formater.stringToValue(dstr);
                good.setCdate(dd);
                String name= (String) jCBName.getSelectedItem();
                String shop= (String) jCBShop.getSelectedItem();
                good.setName(name);
                good.setShop(shop);
                good.setPrice(Double.parseDouble(jTxtPrice.getText()));
                good.setDiscount(Double.parseDouble(jTxtDiscount.getText()));
                //-----
                scallBack.saveAction(good);
            } catch (ParseException ex) {
                Logger.getLogger(AddEditDlg.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jBtnSaveActionPerformed

    void fillInFields(Good good,List<String> names,List<String> shops) throws ParseException {
        DateLabelFormatter formater = new DateLabelFormatter();
        String tdate = formater.valueToString(good.getCdate());
       jtxtDate.setText(tdate);
       
       setupNameCB(good.getName(), names);
       setupShopsCB(good.getShop(), shops);
       jTxtPrice.setText(Double.toString(good.getPrice()));
       jTxtDiscount.setText(Double.toString(good.getDiscount()));
    }

    private void setupNameCB(String selectedName, List<String> names) {
        String[] items = new String[names.size()];
        int i=0,selectedIdx= -1;
        for (String name : names) {
            if(name.equals(selectedName)){
               selectedIdx = i;
            }
            items[i++]= name;
        }
        jCBName.setModel(new javax.swing.DefaultComboBoxModel<>(items));
        jCBName.setSelectedIndex(selectedIdx);
    }

    private void setupShopsCB(String selectedShop, List<String> shops) {
      String[] items = new String[shops.size()];
        int i=0,selectedIdx= -1;
        for (String shop : shops) {
            if(shop.equals(selectedShop)){
               selectedIdx = i;
            }
            items[i++]= shop;
        }
        jCBShop.setModel(new javax.swing.DefaultComboBoxModel<>(items));   
        jCBShop.setSelectedIndex(selectedIdx);
    }


    public void setScallBack(ISaveActionCallBack scallBack) {
        this.scallBack = scallBack;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddEditDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddEditDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddEditDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddEditDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AddEditDlg dialog = new AddEditDlg(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                //----------------------------
             
                //---------------------------
                dialog.setVisible(true);
            }
        });
        

    }

    private boolean isValidForm() {
        if(jtxtDate.getText().isEmpty()) return false;
        double db;
        try {
            db = Double.parseDouble(jTxtPrice.getText());
                }catch(NumberFormatException ex){
                    return false;
                }
        if(Double.parseDouble(jTxtPrice.getText())<= 0.0)
              return false;
        try {
            db = Double.parseDouble(jTxtDiscount.getText());
                }catch(NumberFormatException ex){
                    return false;
                }
        if(jCBName.getSelectedItem()==null)
             return false;
        if(jCBShop.getSelectedItem()==null)
             return false;
        return true;
        }

    class DoubleVerifier extends InputVerifier {

        @Override
        public boolean verify(JComponent input) {
            JTextField txtFld = (JTextField) input;
            
            String stxt= txtFld.getText();
            double result =0;
            try {
                double dv = Double.parseDouble(stxt);
                if(dv < 0.0){
                 jLblValidation.setText("Value must not be less 0 !");
                 return false;
                }
            } catch (NumberFormatException numberFormatException) {
                jLblValidation.setText("Value must be Double!");
                return false;
            }
            
            jLblValidation.setText("");
            return true;
        }
    
    }
    
    class DoubleVerifierNotZero extends InputVerifier {

        @Override
        public boolean verify(JComponent input) {
            JTextField txtFld = (JTextField) input;
            
            String stxt= txtFld.getText();
            double result =0;
            try {
                double dv = Double.parseDouble(stxt);
                if(dv <= 0.0){
                 jLblValidation.setText("Value must not be <= 0 !");
                 return false;
                }
            } catch (NumberFormatException numberFormatException) {
                jLblValidation.setText("Value must be Double!");
                return false;
            }
            
            jLblValidation.setText("");
            return true;
        }
    
    }
    class IsEmptyVerifier extends InputVerifier {

        @Override
        public boolean verify(JComponent input) {
            JTextField txtFld = (JTextField) input;
            String txt= txtFld.getText();
            
            String stxt = (String) txtFld.getText();
            
            if(stxt.isEmpty()){
                 jLblValidation.setText("Field must not be Empty!");
                 return false;
            }
            
            jLblValidation.setText("");
            return true;
        }
    
    }
    class IsEmptyDateFieldVerifier extends InputVerifier{

        @Override
        public boolean verify(JComponent input) {
            JTextField txtFld = (JTextField) input;
            String txt= txtFld.getText();
            if(txt.isEmpty()){
                 jLblValidation.setText("Date must not be Empty!");
                 return false;
            }
           jLblValidation.setText("");
           return true;
        }
    
    }
            

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnCancel;
    private javax.swing.JButton jBtnPickDate;
    private javax.swing.JButton jBtnSave;
    private javax.swing.JComboBox<String> jCBName;
    private javax.swing.JComboBox<String> jCBShop;
    private javax.swing.JLabel jLblValidation;
    private javax.swing.JTextField jTxtDiscount;
    private javax.swing.JTextField jTxtPrice;
    private javax.swing.JTextField jtxtDate;
    // End of variables declaration//GEN-END:variables
}
