
package goodsprice.ui;

import javax.swing.JFileChooser;

/**
 *
 * @author Raitis
 */
public class ToolsJDialog extends javax.swing.JDialog {

    private String selectedFilePath;
  
    private final IToolsJDialogCallbacks callBack;
    /**
     * Creates new form ToolsJDialog
     */
    public ToolsJDialog(java.awt.Frame parent, boolean modal, IToolsJDialogCallbacks callBack) {
        super(parent, modal);
        this.callBack = callBack;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jButton1 = new javax.swing.JButton();
        jBtnExport = new javax.swing.JButton();
        jBtnImport = new javax.swing.JButton();
        jBtnServer = new javax.swing.JButton();
        jBtnClient = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jBtnExport.setText("Export Data");
        jBtnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnExportActionPerformed(evt);
            }
        });

        jBtnImport.setText("Import Data");
        jBtnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnImportActionPerformed(evt);
            }
        });

        jBtnServer.setText("Tcp Server");
        jBtnServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnServerActionPerformed(evt);
            }
        });

        jBtnClient.setText("Tcp Client");
        jBtnClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnClientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtnExport)
                    .addComponent(jBtnImport)
                    .addComponent(jBtnServer)
                    .addComponent(jBtnClient))
                .addContainerGap(287, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jBtnExport)
                .addGap(18, 18, 18)
                .addComponent(jBtnImport)
                .addGap(18, 18, 18)
                .addComponent(jBtnServer)
                .addGap(18, 18, 18)
                .addComponent(jBtnClient)
                .addContainerGap(123, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void schooseFile(){
    JFileChooser chooser = new JFileChooser();
        //chooser.setApproveButtonText("Run Application");
        int res = chooser.showDialog(this, null);
        selectedFilePath = null;
        switch(res){
            case JFileChooser.CANCEL_OPTION:
                //System.out.println("Cancel");
                
                break;
            case JFileChooser.APPROVE_OPTION:
                selectedFilePath = chooser.getSelectedFile().getPath();
               // System.out.println("APROVE selected:"+ selectedFilePath);
                
                break;
            default: System.out.println("goodsprice.ui.ToolsJDialog.jBtnExportActionPerformed() : OTHER"); 
                
                   
        }
    }
    
    private void jBtnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnExportActionPerformed
       
        schooseFile();
        if(callBack != null){
          callBack.filePathSelectedExport(selectedFilePath);
        }
       
    }//GEN-LAST:event_jBtnExportActionPerformed

    private void jBtnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnImportActionPerformed
      schooseFile();
        if(callBack != null){
          callBack.filePathSelectedImport(selectedFilePath);
        }
    }//GEN-LAST:event_jBtnImportActionPerformed

    private void jBtnServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnServerActionPerformed
        TcpServerJDialog dialog = new TcpServerJDialog(new javax.swing.JFrame(), true, callBack);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        if(dialog.isTaskRunning()){
                           return;
                        }
                        dialog.dispose();
                    }
                    
                });
                dialog.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
                dialog.setVisible(true);
    }//GEN-LAST:event_jBtnServerActionPerformed

    private void jBtnClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnClientActionPerformed
      TcpClientJDialog dialog = new TcpClientJDialog(new javax.swing.JFrame(), true, callBack);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        if(dialog.isTaskRunning()){
                           return;
                        }
                        dialog.dispose();
                    }
                    
                });
                dialog.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
                dialog.setVisible(true);
    }//GEN-LAST:event_jBtnClientActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ToolsJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ToolsJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ToolsJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ToolsJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ToolsJDialog dialog = new ToolsJDialog(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnClient;
    private javax.swing.JButton jBtnExport;
    private javax.swing.JButton jBtnImport;
    private javax.swing.JButton jBtnServer;
    private javax.swing.JButton jButton1;
    private javax.swing.JFileChooser jFileChooser1;
    // End of variables declaration//GEN-END:variables
}
